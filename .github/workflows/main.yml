name: services_my-application_CI

on:
  pull_request:
    paths:
      - services/my-application/*
  push:
    branches:
      - master
    # paths:
    #   - services/my-application/*

env:
  DOCKER_IMAGE: docker.io/1mill/services-my-application

jobs:
  deploy:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    if: endsWith(github.ref, 'master') == true
    needs: [package]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-env name=TF_VAR_IMAGE::${{ env.DOCKER_IMAGE }}:${{ needs.package.outputs.version }}"
      - run: docker-compose -f cicd.docker-compose.yml up --exit-code-from deploy --build deploy
        working-directory: ./services/my-application

  package:
    defaults:
      run:
        working-directory: ./services/my-application
    if: endsWith(github.ref, 'master') == true
    needs: [test-code, test-deploy]
    outputs:
      version: ${{ steps.output_version.outputs.VERSION }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: echo "::set-env name=VERSION::$(date +'%Y-%m-%dT%H-%M-%S')"
      - run: echo "::set-output name=VERSION::${{ env.VERSION }}"
        id: output_version
      - run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - run: docker build . --file Dockerfile --tag temp-image
      - run: docker tag temp-image ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
      - run: docker tag temp-image ${{ env.DOCKER_IMAGE }}:latest
      - run: docker push ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
      - run: docker push ${{ env.DOCKER_IMAGE }}:latest

  test-code:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f cicd.docker-compose.yml up --exit-code-from test-code --build test-code
        working-directory: ./services/my-application

  test-deploy:
    runs-on: ubuntu-20.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_PROFILE: ${{ secrets.AWS_PROFILE }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - run: docker-compose -f cicd.docker-compose.yml up --exit-code-from test-deploy --build test-deploy
        working-directory: ./services/my-application
